Computer game: What is your lucky number?
Let’s program a game between CPU and human player
(min 18 years old) with python.
Important: Kindly note
• This project will be built into new Python 3
virtual environment, and in git repo (optional:
GitHub private repo) with declaration of:
Requirements.txt, .gitignore ( 15 points)
• Using Python OOP only.
• Testing for every class and method below is a
must. 70% of tasks’ points is for testing and 30%
for coding.
Game steps and rules:
1. Once we start the game, CPU asks to input the
player’s full name and CPU saves it into variable
player_name.
player_name should be a string of characters
only (no numbers) and one whitespace only
between first name and last name.
(5 points)
2. Then CPU asks to input player birthdate as
yyyymmdd, CPU validate this input: it is (a year
in yyyy, a month in mm and a day in dd.) If all ok,
then we save it into variable player_birthdate.
(5 points)
3. CPU calculates the player age from the
player_birthdate, and CPU saves it into variable
called player_age.
(5points)
4. CPU compares if player_age more or equal 18
(as current years is 2022) if True so we move to
step #5, if not CPU asks for both steps #2 and
#3 again.
(5points)
Once we have the right player_name and age:
5. CPU generates a lucky list of 9 integers between
0-100 and saves it in variable called lucky_list.
(5 points)
6. CPU generates a lucky number between 0-100,
and saves it into variable called lucky_number,
and adds it to the lucky_list so lucky list will have
10 integers now.
(5 points)
7. CPU prints the lucky_list and asks player to pick
the lucky number from the lucky list, CPU saves
the user input into variable called player_input.
(5 points)
8. If the player chooses the luck number, then CPU
print: “Gongrats, game is over! And you got
lucky number from try#{tries_count} ”
,where tries_count is variable to count how
many times the player tried to get the lucky
number.
then CPU prints to player:
“Do you like to play again? (Input y: Yes, and
n:NO)
if yes so we go back to step #5, if no so we just
exit!
(10 points)
9. Otherwise wrong guess, CPU generates new list
that contains numbers from the lucky_list and
has only numbers that differ 10 from the lucky
number and save it into shorter_lucky_list.
Check this example:
lucky_list = [5,1,20,99,70,12,22,2,89,15]
Luck_number = 12
player_input = 70
Shorter list will be between min 12-10 =2 and
max 12+10 = 22
So
shorter_lucky_list = [5,20,12,22,2,15]
(20 points)
10. So, CPU print: “this is try#{tries_count} and
new list is: {shorter_lucky_list}, choose the
lucky number?”
(10 points)
11. If the player chooses the lucky number so
we are in step #8 again.
(5 points)
12. Otherwise, CPU deletes the wrong number,
that player entered in step#10, from the shorter
lucky list and back again to step #10.
(5 points)
13. So, game ends upon choosing the lucky
number or shorter_lucky_list is just 2 integers
left! 